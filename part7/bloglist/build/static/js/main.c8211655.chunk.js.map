{"version":3,"sources":["components/Blog.js","components/BlogForm.js","components/LoginForm.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","like","destroyBlog","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","className","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","onClick","url","likes","id","console","log","JSON","parse","window","localStorage","getItem","userId","user","BlogForm","createBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","value","onChange","target","type","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","setToken","newToken","patch","destroy","delete","blogToDelete","login","credentials","res","App","blogs","setBlogs","setErrorMessage","setUsername","setPassword","setUser","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","handleLogin","loginService","setItem","stringify","setTimeout","blogObjekt","newBlog","concat","current","likeBlog","map","deleteBlog","confirm","filter","b","name","clear","sort","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8211655.chunk.js","sourcesContent":["import userEvent from '@testing-library/user-event'\r\nimport React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, like, destroyBlog}) => {\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div className= 'blog' style={blogStyle}>\r\n      <div style={hideWhenVisible} className='hiden'>\r\n      \r\n          {blog.title} {blog.author}\r\n        \r\n          <button onClick={toggleVisibility}>show</button>\r\n      </div>\r\n      <div style={showWhenVisible} className= 'shown'>\r\n        \r\n          Title:  {blog.title}  <br/>\r\n          Url:    {blog.url}    <br/>\r\n          Likes:  {blog.likes}  <button onClick={() => {like(blog.id)}}>like</button> <br/>\r\n          Author: {blog.author} <br/>\r\n          \r\n          <button onClick={toggleVisibility}>hide</button>\r\n          {console.log(\"snitch nigger\",JSON.parse(window.localStorage.getItem('loggedBlogappUser')).userId)}\r\n          {\r\n            \r\n            JSON.parse(window.localStorage.getItem('loggedBlogappUser')).userId === blog.user.id ? \r\n            <button onClick={() => {destroyBlog(blog)}}>destroy</button>\r\n            :\r\n            null\r\n          }\r\n          \r\n      </div>\r\n    \r\n  \r\n\r\n  \r\n    \r\n    </div>)\r\n}\r\n\r\nexport default Blog\r\n","import React, { useState } from 'react' \r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value)\r\n  }\r\n\r\n  const handleAuthorChange = (event) => {\r\n    setAuthor(event.target.value)\r\n  }\r\n\r\n  const handleUrlChange = (event) => {\r\n    setUrl(event.target.value)\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title:    title,\r\n      author:   author,\r\n      url:      url\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new Blog</h2>\r\n      <form id='form' onSubmit={addBlog}>\r\n      <div>Title:\r\n      <input\r\n        id='title'\r\n        value={title}\r\n        onChange={handleTitleChange}\r\n        />\r\n      </div>\r\n      <div>Author:\r\n      <input\r\n        id='author'\r\n        value={author}\r\n        onChange={handleAuthorChange}\r\n        />\r\n      </div>\r\n      <div>Url:\r\n      <input\r\n        id='url'\r\n        value={url}\r\n        onChange={handleUrlChange}\r\n        />\r\n      </div>\r\n        <button id='submit' type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n   handleSubmit,\r\n   handleUsernameChange,\r\n   handlePasswordChange,\r\n   username,\r\n   password\r\n  }) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button id='login-button' type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\nTogglable.displayName = 'Togglable'\r\n\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\nlet userId = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\nconst setUserId = newUserId => {\r\n  userId = newUserId\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\nconst like = async(id) => {\r\n  const response = await axios.patch(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst destroy = async(id) => {\r\n  console.log(\"destroy2\",id)\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const blogToDelete = await axios.delete(`${baseUrl}/${id}`,config)\r\n\r\n  return blogToDelete.data  \r\n}\r\n\r\nexport default { getAll, create, update, setToken, like, destroy }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const res = await axios.post(baseUrl, credentials)\r\n  return res.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport BlogForm from './components/BlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport Togglable from './components/Togglable'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login' \r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('') \r\n  const [user, setUser] = useState(null)\r\n  const blogFormRef = useRef()\r\n\r\n  \r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      console.log(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n  \r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n    console.log('logging in with', username, password)\r\n  }\r\n\r\n  const logout = () => {\r\n    window.localStorage.clear()\r\n    setUser(null)\r\n  }\r\n  const createBlog = async (blogObjekt) => {\r\n    const newBlog = await blogService.create(blogObjekt)\r\n    setBlogs(blogs.concat(newBlog))\r\n    blogFormRef.current.toggleVisibility()\r\n  }\r\n\r\n  const likeBlog =(id) => {\r\n    console.log(id)\r\n    blogService.like(id)\r\n    setBlogs(blogs.map(blog => blog.id === id ? {...blog,likes: blog.likes+1} : blog))\r\n  }\r\n\r\n  const deleteBlog = (blog) => {\r\n    //das funktioniert bei einigen blogs nicht da der token über geben wird.\r\n    //blogs ohne benutzer haben keinen token und so keinen dersie löschen kann\r\n\r\n    console.log(\"destroy\",blog)\r\n    if(window.confirm(`Destroy blog ${blog.title} by ${blog.author}???`)){\r\n      console.log(blog.id, user.id, user)\r\n      blogService.destroy(blog.id)\r\n      setBlogs(blogs.filter(b => b.id !== blog.id))\r\n    }\r\n    \r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel='login' >\r\n      <LoginForm\r\n      username={username}\r\n      password={password}\r\n      handleUsernameChange={({ target }) => setUsername(target.value)}\r\n      handlePasswordChange={({ target }) => setPassword(target.value)}\r\n      handleSubmit={handleLogin}\r\n      />\r\n    </Togglable>\r\n    /*\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>    */  \r\n  )\r\n  const blogForm = () => (\r\n    <div>\r\n      <div>\r\n        {user.name} is logged in\r\n        <button id='logout' onClick={() => {logout()}}>logout</button>\r\n      </div>\r\n      \r\n      <Togglable buttonLabel='new blog' ref={blogFormRef}>\r\n        <BlogForm createBlog={createBlog} />\r\n      </Togglable>\r\n\r\n      {console.log(blogs)}\r\n      {blogs.sort((a, b) => b.likes - a.likes).map(blog => <Blog key={blog.id} blog={blog} like={likeBlog} destroyBlog={deleteBlog}/>)}\r\n    </div>  \r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>blogs</h1>\r\n      {user === null ?\r\n        loginForm() :\r\n        blogForm()\r\n      } \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}